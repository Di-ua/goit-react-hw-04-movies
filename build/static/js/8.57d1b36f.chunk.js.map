{"version":3,"sources":["components/Reviews/Reviews.js","shared/Loader/index.js","services/movieApi.js","components/Reviews/Reviews.module.css"],"names":["Reviews","state","reviews","movieId","this","props","match","params","baseHttpService","fetchMovieReviews","then","results","setState","length","items","map","review","className","styles","listItem","title","author","content","id","list","noInfo","Component","baseURL","key","language","fetchPopularMovies","get","fetchMoviesWithQuery","searchQuery","page","fetchMovieDetails","fetchMovieCast","url","axios","res","data","module","exports"],"mappings":"2QA4CeA,E,4MArCbC,MAAQ,CACNC,QAAS,M,uDAGX,WAAqB,IAAD,OAEVC,EADUC,KAAKC,MAAfC,MACkBC,OAAlBJ,QACRK,IAAgBC,kBAAkBN,GAASO,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACjD,EAAKC,SAAS,CAAEV,QAASS,S,oBAG7B,WAAU,IACAT,EAAYE,KAAKH,MAAjBC,QACR,GAAKA,EAEE,CACL,GAAIA,EAAQW,OAAS,EAAG,CACtB,IAAMC,EAAQZ,EAAQa,KAAI,SAAAC,GACxB,OACE,qBAAIC,UAAWC,IAAOC,SAAtB,UACE,qBAAIF,UAAWC,IAAOE,MAAtB,qBAAsCJ,EAAOK,UAC7C,4BAAIL,EAAOM,YAFwBpB,EAAQqB,OAMjD,OAAO,oBAAIN,UAAWC,IAAOM,KAAtB,SAA6BV,IAEpC,OACE,mBAAGG,UAAWC,IAAOO,OAArB,sDAdJ,OAAO,cAAC,IAAD,Q,GAfSC,c,gCCNtB,iD,6DCuCMlB,EAAkB,I,iDApCtBmB,QAAU,gC,KACVC,IAAM,mC,KACNC,SAAW,Q,KACXC,mBAAqB,WACnB,OAAO,EAAKC,IAAL,qCAAuC,EAAKH,IAA5C,kB,KAGTI,qBAAuB,SAACC,GAA2B,IAAdC,EAAa,uDAAN,EAC1C,OAAO,EAAKH,IAAL,+BACmB,EAAKH,IADxB,qBACwC,EAAKC,SAD7C,kBAC+DI,EAD/D,iBACmFC,EADnF,0B,KAKTC,kBAAoB,SAAAZ,GAClB,OAAO,EAAKQ,IAAL,gBACIR,EADJ,oBACkB,EAAKK,IADvB,qBACuC,EAAKC,Y,KAIrDO,eAAiB,SAAAb,GACf,OAAO,EAAKQ,IAAL,gBACIR,EADJ,4BAC0B,EAAKK,IAD/B,qBAC+C,EAAKC,Y,KAI7DpB,kBAAoB,SAAAc,GAClB,OAAO,EAAKQ,IAAL,gBACIR,EADJ,4BAC0B,EAAKK,IAD/B,qBAC+C,EAAKC,Y,KAI7DE,IAAM,WAAe,IAAdM,EAAa,uDAAP,GACX,OAAOC,IAAMP,IAAN,UAAa,EAAKJ,SAAlB,OAA4BU,IAAO3B,MAAK,SAAA6B,GAAG,OAAIA,EAAIC,UAM/ChC,O,mBCxCfiC,EAAOC,QAAU,CAAC,KAAO,sBAAsB,OAAS","file":"static/js/8.57d1b36f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ImageLoader from '../../shared/Loader';\r\n\r\nimport baseHttpService from '../../services/movieApi';\r\nimport styles from './Reviews.module.css';\r\n\r\nclass Reviews extends Component {\r\n  state = {\r\n    reviews: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props;\r\n    const { movieId } = match.params;\r\n    baseHttpService.fetchMovieReviews(movieId).then(({ results }) => {\r\n      this.setState({ reviews: results });\r\n    });\r\n  }\r\n  render() {\r\n    const { reviews } = this.state;\r\n    if (!reviews) {\r\n      return <ImageLoader />;\r\n    } else {\r\n      if (reviews.length > 0) {\r\n        const items = reviews.map(review => {\r\n          return (\r\n            <li className={styles.listItem} key={reviews.id}>\r\n              <h3 className={styles.title}>Author: {review.author}</h3>\r\n              <p>{review.content}</p>\r\n            </li>\r\n          );\r\n        });\r\n        return <ul className={styles.list}>{items}</ul>;\r\n      } else {\r\n        return (\r\n          <p className={styles.noInfo}>\r\n            We don't have any reviews for this movie\r\n          </p>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Reviews;","export { default } from './Loader';","import axios from 'axios';\r\n\r\nclass BaseHttpService {\r\n  baseURL = 'https://api.themoviedb.org/3/';\r\n  key = '4b09b9f11ab38c2c9b3fb8d82d1b956b';\r\n  language = 'en-US';\r\n  fetchPopularMovies = () => {\r\n    return this.get(`trending/movie/day?api_key=${this.key}&adult=false`);\r\n  };\r\n\r\n  fetchMoviesWithQuery = (searchQuery, page = 1) => {\r\n    return this.get(\r\n      `search/movie?api_key=${this.key}&language=${this.language}&query=${searchQuery}&page=${page}&include_adult=false`,\r\n    );\r\n  };\r\n\r\n  fetchMovieDetails = id => {\r\n    return this.get(\r\n      `movie/${id}?api_key=${this.key}&language=${this.language}`,\r\n    );\r\n  };\r\n\r\n  fetchMovieCast = id => {\r\n    return this.get(\r\n      `movie/${id}/credits?api_key=${this.key}&language=${this.language}`,\r\n    );\r\n  };\r\n\r\n  fetchMovieReviews = id => {\r\n    return this.get(\r\n      `movie/${id}/reviews?api_key=${this.key}&language=${this.language}`,\r\n    );\r\n  };\r\n  \r\n  get = (url = '') => {\r\n    return axios.get(`${this.baseURL}${url}`).then(res => res.data);\r\n  };\r\n}\r\n\r\nconst baseHttpService = new BaseHttpService();\r\n\r\nexport default baseHttpService;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Reviews_list__2L5NC\",\"noInfo\":\"Reviews_noInfo__2ZNAI\"};"],"sourceRoot":""}