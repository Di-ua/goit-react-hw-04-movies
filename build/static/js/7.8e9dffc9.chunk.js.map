{"version":3,"sources":["components/Cast/Cast.js","shared/Loader/index.js","services/movieApi.js","components/Cast/Cast.module.css"],"names":["Cast","state","cast","loading","movieId","this","props","match","params","setState","baseHttpService","fetchMovieCast","then","items","map","img","profile_path","className","styles","listItem","src","alt","name","title","character","id","list","Component","baseURL","key","language","fetchPopularMovies","get","fetchMoviesWithQuery","searchQuery","page","fetchMovieDetails","fetchMovieReviews","url","axios","res","data","module","exports"],"mappings":"2QAkDeA,E,4MA3CbC,MAAQ,CACNC,KAAM,GACNC,SAAS,G,uDAGX,WAAqB,IAAD,OAEVC,EADUC,KAAKC,MAAfC,MACkBC,OAAlBJ,QACRC,KAAKI,SAAS,CAAEN,SAAS,IACzBO,IAAgBC,eAAeP,GAASQ,MAAK,YAAe,IAAZV,EAAW,EAAXA,KAC9C,EAAKO,SAAS,CAAEP,OAAMC,SAAS,S,kCAInC,WACEE,KAAKI,SAAS,CAAEN,SAAS,M,oBAE3B,WAAU,IAAD,EACmBE,KAAKJ,MAAvBC,EADD,EACCA,KAAMC,EADP,EACOA,QACd,GAAID,EAAM,CACR,IAAMW,EAAQX,EAAKY,KAAI,SAAAZ,GACrB,IAAIa,EAKJ,OAHKA,EADLb,EAAKc,aACG,0CAAsCd,EAAKc,cAE7C,qEAEJ,qBAAIC,UAAWC,IAAOC,SAAtB,UACE,qBAAKC,IAAKL,EAAKM,IAAKnB,EAAKoB,KAAML,UAAWC,IAAOH,MACjD,oBAAIE,UAAWC,IAAOK,MAAtB,SAA8BrB,EAAKoB,OACnC,4CAAepB,EAAKsB,eAHetB,EAAKuB,OAO9C,OACE,qCACGtB,GAAW,cAAC,IAAD,IACZ,oBAAIc,UAAWC,IAAOQ,KAAtB,SAA6Bb,IAF/B,Y,GApCWc,c,gCCNnB,iD,6DCuCMjB,EAAkB,I,iDApCtBkB,QAAU,gC,KACVC,IAAM,mC,KACNC,SAAW,Q,KACXC,mBAAqB,WACnB,OAAO,EAAKC,IAAL,qCAAuC,EAAKH,IAA5C,kB,KAGTI,qBAAuB,SAACC,GAA2B,IAAdC,EAAa,uDAAN,EAC1C,OAAO,EAAKH,IAAL,+BACmB,EAAKH,IADxB,qBACwC,EAAKC,SAD7C,kBAC+DI,EAD/D,iBACmFC,EADnF,0B,KAKTC,kBAAoB,SAAAX,GAClB,OAAO,EAAKO,IAAL,gBACIP,EADJ,oBACkB,EAAKI,IADvB,qBACuC,EAAKC,Y,KAIrDnB,eAAiB,SAAAc,GACf,OAAO,EAAKO,IAAL,gBACIP,EADJ,4BAC0B,EAAKI,IAD/B,qBAC+C,EAAKC,Y,KAI7DO,kBAAoB,SAAAZ,GAClB,OAAO,EAAKO,IAAL,gBACIP,EADJ,4BAC0B,EAAKI,IAD/B,qBAC+C,EAAKC,Y,KAI7DE,IAAM,WAAe,IAAdM,EAAa,uDAAP,GACX,OAAOC,IAAMP,IAAN,UAAa,EAAKJ,SAAlB,OAA4BU,IAAO1B,MAAK,SAAA4B,GAAG,OAAIA,EAAIC,UAM/C/B,O,mBCxCfgC,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,uBAAuB,IAAM,kBAAkB,MAAQ","file":"static/js/7.8e9dffc9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ImageLoader from '../../shared/Loader';\r\n\r\nimport baseHttpService from '../../services/movieApi';\r\nimport styles from './Cast.module.css';\r\n\r\nclass Cast extends Component {\r\n  state = {\r\n    cast: [],\r\n    loading: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props;\r\n    const { movieId } = match.params;\r\n    this.setState({ loading: true });\r\n    baseHttpService.fetchMovieCast(movieId).then(({ cast }) => {\r\n      this.setState({ cast, loading: false });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({ loading: false });\r\n  }\r\n  render() {\r\n    const { cast, loading } = this.state;\r\n    if (cast) {\r\n      const items = cast.map(cast => {\r\n        let img;\r\n        cast.profile_path\r\n          ? (img = `https://image.tmdb.org/t/p/w300/${cast.profile_path}`)\r\n          : (img =\r\n              'https://rimatour.com/wp-content/uploads/2017/09/No-image-found.jpg');\r\n        return (\r\n          <li className={styles.listItem} key={cast.id}>\r\n            <img src={img} alt={cast.name} className={styles.img} />\r\n            <h3 className={styles.title}>{cast.name}</h3>\r\n            <p>Character: {cast.character}</p>\r\n          </li>\r\n        );\r\n      });\r\n      return (\r\n        <>\r\n          {loading && <ImageLoader />}\r\n          <ul className={styles.list}>{items}</ul>;\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default Cast;","export { default } from './Loader';","import axios from 'axios';\r\n\r\nclass BaseHttpService {\r\n  baseURL = 'https://api.themoviedb.org/3/';\r\n  key = '4b09b9f11ab38c2c9b3fb8d82d1b956b';\r\n  language = 'en-US';\r\n  fetchPopularMovies = () => {\r\n    return this.get(`trending/movie/day?api_key=${this.key}&adult=false`);\r\n  };\r\n\r\n  fetchMoviesWithQuery = (searchQuery, page = 1) => {\r\n    return this.get(\r\n      `search/movie?api_key=${this.key}&language=${this.language}&query=${searchQuery}&page=${page}&include_adult=false`,\r\n    );\r\n  };\r\n\r\n  fetchMovieDetails = id => {\r\n    return this.get(\r\n      `movie/${id}?api_key=${this.key}&language=${this.language}`,\r\n    );\r\n  };\r\n\r\n  fetchMovieCast = id => {\r\n    return this.get(\r\n      `movie/${id}/credits?api_key=${this.key}&language=${this.language}`,\r\n    );\r\n  };\r\n\r\n  fetchMovieReviews = id => {\r\n    return this.get(\r\n      `movie/${id}/reviews?api_key=${this.key}&language=${this.language}`,\r\n    );\r\n  };\r\n  \r\n  get = (url = '') => {\r\n    return axios.get(`${this.baseURL}${url}`).then(res => res.data);\r\n  };\r\n}\r\n\r\nconst baseHttpService = new BaseHttpService();\r\n\r\nexport default baseHttpService;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Cast_list__1CDxM\",\"listItem\":\"Cast_listItem__3St2l\",\"img\":\"Cast_img__3yzwy\",\"title\":\"Cast_title__2HOHx\"};"],"sourceRoot":""}